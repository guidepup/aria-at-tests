name: Test Screen Readers

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  macos-install:
    name: MacOS Install
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-macos-node-modules
        with:
          path: |
            node_modules
          key: macos-modules-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-macos-playwright
        with:
          path: |
            ~/Library/Caches/ms-playwright
          key: macos-playwright-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Test Suites
        uses: actions/cache@v3
        id: cache-macos-test-suites
        with:
          path: |
            testSuites.json
          key: macos-testSuites-${{ hashFiles('aria-at') }}-${{ hashFiles('ignoredTests.json') }}

      - name: Install Dependencies
        if: steps.cache-macos-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        if: steps.cache-macos-playwright.outputs.cache-hit != 'true'
        run: yarn test:install

      - name: Generate Test Suites
        if: steps.cache-macos-test-suites.outputs.cache-hit != 'true'
        run: yarn test:generate

  windows-install:
    name: Windows Install
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-windows-node-modules
        with:
          path: |
            node_modules
          key: windows-modules-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-windows-playwright
        with:
          path: |
            C:\Users\runneradmin\AppData\Local\ms-playwright
          key: windows-playwright-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Test Suites
        uses: actions/cache@v3
        id: cache-windows-test-suites
        with:
          path: |
            testSuites.json
          key: windows-testSuites-${{ hashFiles('aria-at') }}-${{ hashFiles('ignoredTests.json') }}

      - name: Install Dependencies
        if: steps.cache-windows-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        if: steps.cache-windows-playwright.outputs.cache-hit != 'true'
        run: yarn test:install

      - name: Generate Test Suites
        if: steps.cache-windows-test-suites.outputs.cache-hit != 'true'
        run: yarn test:generate

  test-voiceover:
    name: Playwright VoiceOver Tests (${{ matrix.spec }})
    needs: macos-install
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        spec:
          [
            1/30,
            2/30,
            3/30,
            4/30,
            5/30,
            6/30,
            7/30,
            8/30,
            9/30,
            10/30,
            11/30,
            12/30,
            13/30,
            14/30,
            15/30,
            16/30,
            17/30,
            18/30,
            19/30,
            20/30,
            21/30,
            22/30,
            23/30,
            24/30,
            25/30,
            26/30,
            27/30,
            28/30,
            29/30,
            30/30,
          ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Guidepup Setup
        uses: guidepup/setup-action@0.13.0

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: macos-modules-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/ms-playwright
          key: macos-playwright-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Test Suites
        uses: actions/cache@v3
        with:
          path: |
            testSuites.json
          key: macos-testSuites-${{ hashFiles('aria-at') }}-${{ hashFiles('ignoredTests.json') }}

      - name: Run Tests
        run: yarn test ./src/macOsVoiceOver.spec.ts --config macos.config.ts -g "@macos @voiceOver *${{ matrix.spec }}*"
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: artifacts-macos-voiceover-${{ matrix.spec }}
          path: |
            ./test-results
            ./recordings

      - uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: all-blob-reports
          path: blob-report

  test-nvda:
    name: Playwright NVDA Tests (${{ matrix.spec }})
    needs: windows-install
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        spec:
          [
            1/30,
            2/30,
            3/30,
            4/30,
            5/30,
            6/30,
            7/30,
            8/30,
            9/30,
            10/30,
            11/30,
            12/30,
            13/30,
            14/30,
            15/30,
            16/30,
            17/30,
            18/30,
            19/30,
            20/30,
            21/30,
            22/30,
            23/30,
            24/30,
            25/30,
            26/30,
            27/30,
            28/30,
            29/30,
            30/30,
          ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Guidepup Setup
        uses: guidepup/setup-action@0.13.0

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: windows-modules-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\AppData\Local\ms-playwright
          key: windows-playwright-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Cache Test Suites
        uses: actions/cache@v3
        with:
          path: |
            testSuites.json
          key: windows-testSuites-${{ hashFiles('aria-at') }}-${{ hashFiles('ignoredTests.json') }}

      - name: Run Tests
        run: yarn test ./src/windowsNvda.spec.ts --config windows.config.ts -g "@windows @nvda *${{ matrix.spec }}*"
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: artifacts-windows-nvda-${{ matrix.spec }}
          path: |
            ./test-results
            ./recordings

      - uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: all-blob-reports
          path: blob-report

  publish-html-report:
    name: Publish to GitHub Pages
    if: always()
    needs: [test-voiceover, test-nvda]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.head_ref || github.ref_name }}-report
      url: ${{ steps.deploy-pages.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/download-artifact@v3
        with:
          name: all-blob-reports
          path: all-blob-reports

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-macos-node-modules
        with:
          path: |
            node_modules
          key: macos-modules-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}

      - name: Create Allure Test Results
        run: npx playwright merge-reports --reporter allure-playwright ./all-blob-reports

      - name: Create Allure Test Report
        run: npx allure generate ./html-report --clean

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./html-report

      - name: GitHub Pages Deployment
        id: deploy-pages
        uses: actions/deploy-pages@v1

      - name: PR Comment
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Playwright Test Report: ${{steps.deploy-pages.outputs.page_url}}
          comment_tag: "Playwright Test Report"
          pr_number: ${{ inputs.pr_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
